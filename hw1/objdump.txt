
wc:     file format elf64-x86-64
wc
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001350

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000002d8 memsz 0x00000000000002d8 flags r--
  INTERP off    0x0000000000000318 vaddr 0x0000000000000318 paddr 0x0000000000000318 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000910 memsz 0x0000000000000910 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x0000000000000565 memsz 0x0000000000000565 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x00000000000001c8 memsz 0x00000000000001c8 flags r--
    LOAD off    0x0000000000002d60 vaddr 0x0000000000003d60 paddr 0x0000000000003d60 align 2**12
         filesz 0x00000000000002b0 memsz 0x00000000000002c0 flags rw-
 DYNAMIC off    0x0000000000002d70 vaddr 0x0000000000003d70 paddr 0x0000000000003d70 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
    NOTE off    0x0000000000000358 vaddr 0x0000000000000358 paddr 0x0000000000000358 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
0x6474e553 off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x0000000000002018 vaddr 0x0000000000002018 paddr 0x0000000000002018 align 2**2
         filesz 0x000000000000004c memsz 0x000000000000004c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002d60 vaddr 0x0000000000003d60 paddr 0x0000000000003d60 align 2**0
         filesz 0x00000000000002a0 memsz 0x00000000000002a0 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x0000000000001558
  INIT_ARRAY           0x0000000000003d60
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003d68
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000003a0
  STRTAB               0x0000000000000590
  SYMTAB               0x00000000000003c8
  STRSZ                0x000000000000010b
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003f60
  PLTRELSZ             0x0000000000000120
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000007f0
  RELA                 0x0000000000000718
  RELASZ               0x00000000000000d8
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000006c8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x000000000000069c
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x0d696913 0x00 05 GLIBC_2.3
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000020  0000000000000338  0000000000000338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000358  0000000000000358  00000358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000000037c  000000000000037c  0000037c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000028  00000000000003a0  00000000000003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000001c8  00000000000003c8  00000000000003c8  000003c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       0000010b  0000000000000590  0000000000000590  00000590  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000026  000000000000069c  000000000000069c  0000069c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000050  00000000000006c8  00000000000006c8  000006c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000d8  0000000000000718  0000000000000718  00000718  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000120  00000000000007f0  00000000000007f0  000007f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          000000d0  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .plt.got      00000010  00000000000010f0  00000000000010f0  000010f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .plt.sec      000000c0  0000000000001100  0000000000001100  00001100  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text         00000395  00000000000011c0  00000000000011c0  000011c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .fini         0000000d  0000000000001558  0000000000001558  00001558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .rodata       00000015  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .eh_frame_hdr 0000004c  0000000000002018  0000000000002018  00002018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .eh_frame     00000160  0000000000002068  0000000000002068  00002068  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .init_array   00000008  0000000000003d60  0000000000003d60  00002d60  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .fini_array   00000008  0000000000003d68  0000000000003d68  00002d68  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      000001f0  0000000000003d70  0000000000003d70  00002d70  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          000000a0  0000000000003f60  0000000000003f60  00002f60  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000010  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000010  0000000000004010  0000000000004010  00003010  2**4
                  ALLOC
 26 .comment      00000024  0000000000000000  0000000000000000  00003010  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000060  0000000000000000  0000000000000000  00003034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_info   00000c67  0000000000000000  0000000000000000  00003094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_abbrev 000003e6  0000000000000000  0000000000000000  00003cfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_line   00000456  0000000000000000  0000000000000000  000040e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_str    00000410  0000000000000000  0000000000000000  00004537  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loc    000005bd  0000000000000000  0000000000000000  00004947  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_ranges 000000c0  0000000000000000  0000000000000000  00004f04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
0000000000000318 l    d  .interp	0000000000000000              .interp
0000000000000338 l    d  .note.gnu.property	0000000000000000              .note.gnu.property
0000000000000358 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
000000000000037c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000003a0 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000003c8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000590 l    d  .dynstr	0000000000000000              .dynstr
000000000000069c l    d  .gnu.version	0000000000000000              .gnu.version
00000000000006c8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000718 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000007f0 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
00000000000010f0 l    d  .plt.got	0000000000000000              .plt.got
0000000000001100 l    d  .plt.sec	0000000000000000              .plt.sec
00000000000011c0 l    d  .text	0000000000000000              .text
0000000000001558 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
0000000000002018 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002068 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003d60 l    d  .init_array	0000000000000000              .init_array
0000000000003d68 l    d  .fini_array	0000000000000000              .fini_array
0000000000003d70 l    d  .dynamic	0000000000000000              .dynamic
0000000000003f60 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
0000000000004010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_loc	0000000000000000              .debug_loc
0000000000000000 l    d  .debug_ranges	0000000000000000              .debug_ranges
0000000000000000 l    df *ABS*	0000000000000000              main.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001380 l     F .text	0000000000000000              deregister_tm_clones
00000000000013b0 l     F .text	0000000000000000              register_tm_clones
00000000000013f0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004018 l     O .bss	0000000000000001              completed.8059
0000000000003d68 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001430 l     F .text	0000000000000000              frame_dummy
0000000000003d60 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              wc.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000021c4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003d68 l       .init_array	0000000000000000              __init_array_end
0000000000003d70 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003d60 l       .init_array	0000000000000000              __init_array_start
0000000000002018 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003f60 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
0000000000001550 g     F .text	0000000000000005              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              putchar@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              fread@@GLIBC_2.2.5
0000000000004010 g     O .bss	0000000000000008              stdin@@GLIBC_2.2.5
0000000000004010 g       .data	0000000000000000              _edata
0000000000001440 g     F .text	0000000000000097              word_count
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
0000000000001558 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              strlen@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              ftell@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000014e0 g     F .text	0000000000000065              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              malloc@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              fflush@@GLIBC_2.2.5
0000000000004020 g       .bss	0000000000000000              _end
0000000000001350 g     F .text	000000000000002f              _start
0000000000000000       F *UND*	0000000000000000              fseek@@GLIBC_2.2.5
0000000000004010 g       .bss	0000000000000000              __bss_start
00000000000011c0 g     F .text	0000000000000185              main
0000000000000000       F *UND*	0000000000000000              __printf_chk@@GLIBC_2.3.4
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000004010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __ctype_b_loc@@GLIBC_2.3



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 42 2f 00 00    	pushq  0x2f42(%rip)        # 3f68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 43 2f 00 00 	bnd jmpq *0x2f43(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop

Disassembly of section .plt.got:

00000000000010f0 <__cxa_finalize@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001100 <putchar@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 6d 2e 00 00 	bnd jmpq *0x2e6d(%rip)        # 3f78 <putchar@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <fread@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 65 2e 00 00 	bnd jmpq *0x2e65(%rip)        # 3f80 <fread@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <fclose@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 5d 2e 00 00 	bnd jmpq *0x2e5d(%rip)        # 3f88 <fclose@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <strlen@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 55 2e 00 00 	bnd jmpq *0x2e55(%rip)        # 3f90 <strlen@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <__stack_chk_fail@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 4d 2e 00 00 	bnd jmpq *0x2e4d(%rip)        # 3f98 <__stack_chk_fail@GLIBC_2.4>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <ftell@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 45 2e 00 00 	bnd jmpq *0x2e45(%rip)        # 3fa0 <ftell@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <malloc@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 3d 2e 00 00 	bnd jmpq *0x2e3d(%rip)        # 3fa8 <malloc@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <fflush@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 35 2e 00 00 	bnd jmpq *0x2e35(%rip)        # 3fb0 <fflush@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <fseek@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 2d 2e 00 00 	bnd jmpq *0x2e2d(%rip)        # 3fb8 <fseek@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <__printf_chk@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 25 2e 00 00 	bnd jmpq *0x2e25(%rip)        # 3fc0 <__printf_chk@GLIBC_2.3.4>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <fopen@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 1d 2e 00 00 	bnd jmpq *0x2e1d(%rip)        # 3fc8 <fopen@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <__ctype_b_loc@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 15 2e 00 00 	bnd jmpq *0x2e15(%rip)        # 3fd0 <__ctype_b_loc@GLIBC_2.3>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011c0 <main>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	41 56                	push   %r14
    11c6:	41 55                	push   %r13
    11c8:	41 54                	push   %r12
    11ca:	55                   	push   %rbp
    11cb:	53                   	push   %rbx
    11cc:	48 81 ec f0 03 00 00 	sub    $0x3f0,%rsp
    11d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11da:	00 00 
    11dc:	48 89 84 24 e8 03 00 	mov    %rax,0x3e8(%rsp)
    11e3:	00 
    11e4:	31 c0                	xor    %eax,%eax
    11e6:	83 ff 01             	cmp    $0x1,%edi
    11e9:	0f 84 f6 00 00 00    	je     12e5 <main+0x125>
    11ef:	89 fb                	mov    %edi,%ebx
    11f1:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    11f5:	49 89 f4             	mov    %rsi,%r12
    11f8:	48 8d 35 10 0e 00 00 	lea    0xe10(%rip),%rsi        # 200f <_IO_stdin_used+0xf>
    11ff:	e8 9c ff ff ff       	callq  11a0 <fopen@plt>
    1204:	48 89 c5             	mov    %rax,%rbp
    1207:	48 85 c0             	test   %rax,%rax
    120a:	0f 84 ce 00 00 00    	je     12de <main+0x11e>
    1210:	ba 02 00 00 00       	mov    $0x2,%edx
    1215:	31 f6                	xor    %esi,%esi
    1217:	48 89 c7             	mov    %rax,%rdi
    121a:	e8 61 ff ff ff       	callq  1180 <fseek@plt>
    121f:	48 89 ef             	mov    %rbp,%rdi
    1222:	e8 29 ff ff ff       	callq  1150 <ftell@plt>
    1227:	31 d2                	xor    %edx,%edx
    1229:	31 f6                	xor    %esi,%esi
    122b:	48 89 ef             	mov    %rbp,%rdi
    122e:	49 89 c5             	mov    %rax,%r13
    1231:	e8 4a ff ff ff       	callq  1180 <fseek@plt>
    1236:	4d 63 ed             	movslq %r13d,%r13
    1239:	4c 89 ef             	mov    %r13,%rdi
    123c:	e8 1f ff ff ff       	callq  1160 <malloc@plt>
    1241:	49 89 c6             	mov    %rax,%r14
    1244:	48 85 c0             	test   %rax,%rax
    1247:	0f 84 ee 00 00 00    	je     133b <main+0x17b>
    124d:	4c 89 ea             	mov    %r13,%rdx
    1250:	48 89 e9             	mov    %rbp,%rcx
    1253:	be 01 00 00 00       	mov    $0x1,%esi
    1258:	48 89 c7             	mov    %rax,%rdi
    125b:	e8 b0 fe ff ff       	callq  1110 <fread@plt>
    1260:	4c 89 f7             	mov    %r14,%rdi
    1263:	e8 d8 01 00 00       	callq  1440 <word_count>
    1268:	48 89 ef             	mov    %rbp,%rdi
    126b:	49 89 c5             	mov    %rax,%r13
    126e:	e8 ad fe ff ff       	callq  1120 <fclose@plt>
    1273:	41 8b 4d 04          	mov    0x4(%r13),%ecx
    1277:	45 8b 45 08          	mov    0x8(%r13),%r8d
    127b:	31 c0                	xor    %eax,%eax
    127d:	41 8b 55 00          	mov    0x0(%r13),%edx
    1281:	48 8d 35 7c 0d 00 00 	lea    0xd7c(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    1288:	bf 01 00 00 00       	mov    $0x1,%edi
    128d:	e8 fe fe ff ff       	callq  1190 <__printf_chk@plt>
    1292:	83 eb 01             	sub    $0x1,%ebx
    1295:	7e 18                	jle    12af <main+0xef>
    1297:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    129c:	48 8d 35 6e 0d 00 00 	lea    0xd6e(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    12a3:	bf 01 00 00 00       	mov    $0x1,%edi
    12a8:	31 c0                	xor    %eax,%eax
    12aa:	e8 e1 fe ff ff       	callq  1190 <__printf_chk@plt>
    12af:	bf 0a 00 00 00       	mov    $0xa,%edi
    12b4:	e8 47 fe ff ff       	callq  1100 <putchar@plt>
    12b9:	31 c0                	xor    %eax,%eax
    12bb:	48 8b 9c 24 e8 03 00 	mov    0x3e8(%rsp),%rbx
    12c2:	00 
    12c3:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    12ca:	00 00 
    12cc:	75 68                	jne    1336 <main+0x176>
    12ce:	48 81 c4 f0 03 00 00 	add    $0x3f0,%rsp
    12d5:	5b                   	pop    %rbx
    12d6:	5d                   	pop    %rbp
    12d7:	41 5c                	pop    %r12
    12d9:	41 5d                	pop    %r13
    12db:	41 5e                	pop    %r14
    12dd:	c3                   	retq   
    12de:	b8 01 00 00 00       	mov    $0x1,%eax
    12e3:	eb d6                	jmp    12bb <main+0xfb>
    12e5:	48 8b 3d 24 2d 00 00 	mov    0x2d24(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    12ec:	48 89 e5             	mov    %rsp,%rbp
    12ef:	e8 7c fe ff ff       	callq  1170 <fflush@plt>
    12f4:	48 8b 0d 15 2d 00 00 	mov    0x2d15(%rip),%rcx        # 4010 <stdin@@GLIBC_2.2.5>
    12fb:	ba e8 03 00 00       	mov    $0x3e8,%edx
    1300:	48 89 ef             	mov    %rbp,%rdi
    1303:	be 01 00 00 00       	mov    $0x1,%esi
    1308:	e8 03 fe ff ff       	callq  1110 <fread@plt>
    130d:	48 89 ef             	mov    %rbp,%rdi
    1310:	e8 2b 01 00 00       	callq  1440 <word_count>
    1315:	48 8d 35 e8 0c 00 00 	lea    0xce8(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    131c:	bf 01 00 00 00       	mov    $0x1,%edi
    1321:	8b 48 04             	mov    0x4(%rax),%ecx
    1324:	44 8b 40 08          	mov    0x8(%rax),%r8d
    1328:	8b 10                	mov    (%rax),%edx
    132a:	31 c0                	xor    %eax,%eax
    132c:	e8 5f fe ff ff       	callq  1190 <__printf_chk@plt>
    1331:	e9 79 ff ff ff       	jmpq   12af <main+0xef>
    1336:	e8 05 fe ff ff       	callq  1140 <__stack_chk_fail@plt>
    133b:	b8 02 00 00 00       	mov    $0x2,%eax
    1340:	e9 76 ff ff ff       	jmpq   12bb <main+0xfb>
    1345:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    134c:	00 00 00 
    134f:	90                   	nop

0000000000001350 <_start>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	31 ed                	xor    %ebp,%ebp
    1356:	49 89 d1             	mov    %rdx,%r9
    1359:	5e                   	pop    %rsi
    135a:	48 89 e2             	mov    %rsp,%rdx
    135d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1361:	50                   	push   %rax
    1362:	54                   	push   %rsp
    1363:	4c 8d 05 e6 01 00 00 	lea    0x1e6(%rip),%r8        # 1550 <__libc_csu_fini>
    136a:	48 8d 0d 6f 01 00 00 	lea    0x16f(%rip),%rcx        # 14e0 <__libc_csu_init>
    1371:	48 8d 3d 48 fe ff ff 	lea    -0x1b8(%rip),%rdi        # 11c0 <main>
    1378:	ff 15 62 2c 00 00    	callq  *0x2c62(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    137e:	f4                   	hlt    
    137f:	90                   	nop

0000000000001380 <deregister_tm_clones>:
    1380:	48 8d 3d 89 2c 00 00 	lea    0x2c89(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    1387:	48 8d 05 82 2c 00 00 	lea    0x2c82(%rip),%rax        # 4010 <stdin@@GLIBC_2.2.5>
    138e:	48 39 f8             	cmp    %rdi,%rax
    1391:	74 15                	je     13a8 <deregister_tm_clones+0x28>
    1393:	48 8b 05 3e 2c 00 00 	mov    0x2c3e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    139a:	48 85 c0             	test   %rax,%rax
    139d:	74 09                	je     13a8 <deregister_tm_clones+0x28>
    139f:	ff e0                	jmpq   *%rax
    13a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13a8:	c3                   	retq   
    13a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013b0 <register_tm_clones>:
    13b0:	48 8d 3d 59 2c 00 00 	lea    0x2c59(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    13b7:	48 8d 35 52 2c 00 00 	lea    0x2c52(%rip),%rsi        # 4010 <stdin@@GLIBC_2.2.5>
    13be:	48 29 fe             	sub    %rdi,%rsi
    13c1:	48 89 f0             	mov    %rsi,%rax
    13c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    13c8:	48 c1 f8 03          	sar    $0x3,%rax
    13cc:	48 01 c6             	add    %rax,%rsi
    13cf:	48 d1 fe             	sar    %rsi
    13d2:	74 14                	je     13e8 <register_tm_clones+0x38>
    13d4:	48 8b 05 15 2c 00 00 	mov    0x2c15(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    13db:	48 85 c0             	test   %rax,%rax
    13de:	74 08                	je     13e8 <register_tm_clones+0x38>
    13e0:	ff e0                	jmpq   *%rax
    13e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    13e8:	c3                   	retq   
    13e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013f0 <__do_global_dtors_aux>:
    13f0:	f3 0f 1e fa          	endbr64 
    13f4:	80 3d 1d 2c 00 00 00 	cmpb   $0x0,0x2c1d(%rip)        # 4018 <completed.8059>
    13fb:	75 2b                	jne    1428 <__do_global_dtors_aux+0x38>
    13fd:	55                   	push   %rbp
    13fe:	48 83 3d f2 2b 00 00 	cmpq   $0x0,0x2bf2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1405:	00 
    1406:	48 89 e5             	mov    %rsp,%rbp
    1409:	74 0c                	je     1417 <__do_global_dtors_aux+0x27>
    140b:	48 8b 3d f6 2b 00 00 	mov    0x2bf6(%rip),%rdi        # 4008 <__dso_handle>
    1412:	e8 d9 fc ff ff       	callq  10f0 <__cxa_finalize@plt>
    1417:	e8 64 ff ff ff       	callq  1380 <deregister_tm_clones>
    141c:	c6 05 f5 2b 00 00 01 	movb   $0x1,0x2bf5(%rip)        # 4018 <completed.8059>
    1423:	5d                   	pop    %rbp
    1424:	c3                   	retq   
    1425:	0f 1f 00             	nopl   (%rax)
    1428:	c3                   	retq   
    1429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001430 <frame_dummy>:
    1430:	f3 0f 1e fa          	endbr64 
    1434:	e9 77 ff ff ff       	jmpq   13b0 <register_tm_clones>
    1439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001440 <word_count>:
    1440:	f3 0f 1e fa          	endbr64 
    1444:	41 54                	push   %r12
    1446:	55                   	push   %rbp
    1447:	48 89 fd             	mov    %rdi,%rbp
    144a:	bf 0c 00 00 00       	mov    $0xc,%edi
    144f:	53                   	push   %rbx
    1450:	e8 0b fd ff ff       	callq  1160 <malloc@plt>
    1455:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
    1459:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1460:	49 89 c4             	mov    %rax,%r12
    1463:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    146a:	84 db                	test   %bl,%bl
    146c:	74 54                	je     14c2 <word_count+0x82>
    146e:	e8 3d fd ff ff       	callq  11b0 <__ctype_b_loc@plt>
    1473:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    1477:	48 8b 30             	mov    (%rax),%rsi
    147a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1480:	48 0f be c3          	movsbq %bl,%rax
    1484:	b9 01 00 00 00       	mov    $0x1,%ecx
    1489:	f6 04 46 08          	testb  $0x8,(%rsi,%rax,2)
    148d:	75 1e                	jne    14ad <word_count+0x6d>
    148f:	8d 43 f7             	lea    -0x9(%rbx),%eax
    1492:	3c 01                	cmp    $0x1,%al
    1494:	76 05                	jbe    149b <word_count+0x5b>
    1496:	80 fb 20             	cmp    $0x20,%bl
    1499:	75 10                	jne    14ab <word_count+0x6b>
    149b:	41 83 44 24 04 01    	addl   $0x1,0x4(%r12)
    14a1:	80 fb 0a             	cmp    $0xa,%bl
    14a4:	75 05                	jne    14ab <word_count+0x6b>
    14a6:	41 83 04 24 01       	addl   $0x1,(%r12)
    14ab:	31 c9                	xor    %ecx,%ecx
    14ad:	0f b6 1a             	movzbl (%rdx),%ebx
    14b0:	48 83 c2 01          	add    $0x1,%rdx
    14b4:	84 db                	test   %bl,%bl
    14b6:	75 c8                	jne    1480 <word_count+0x40>
    14b8:	84 c9                	test   %cl,%cl
    14ba:	74 06                	je     14c2 <word_count+0x82>
    14bc:	41 83 44 24 04 01    	addl   $0x1,0x4(%r12)
    14c2:	48 89 ef             	mov    %rbp,%rdi
    14c5:	e8 66 fc ff ff       	callq  1130 <strlen@plt>
    14ca:	5b                   	pop    %rbx
    14cb:	5d                   	pop    %rbp
    14cc:	41 89 44 24 08       	mov    %eax,0x8(%r12)
    14d1:	4c 89 e0             	mov    %r12,%rax
    14d4:	41 5c                	pop    %r12
    14d6:	c3                   	retq   
    14d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    14de:	00 00 

00000000000014e0 <__libc_csu_init>:
    14e0:	f3 0f 1e fa          	endbr64 
    14e4:	41 57                	push   %r15
    14e6:	4c 8d 3d 73 28 00 00 	lea    0x2873(%rip),%r15        # 3d60 <__frame_dummy_init_array_entry>
    14ed:	41 56                	push   %r14
    14ef:	49 89 d6             	mov    %rdx,%r14
    14f2:	41 55                	push   %r13
    14f4:	49 89 f5             	mov    %rsi,%r13
    14f7:	41 54                	push   %r12
    14f9:	41 89 fc             	mov    %edi,%r12d
    14fc:	55                   	push   %rbp
    14fd:	48 8d 2d 64 28 00 00 	lea    0x2864(%rip),%rbp        # 3d68 <__do_global_dtors_aux_fini_array_entry>
    1504:	53                   	push   %rbx
    1505:	4c 29 fd             	sub    %r15,%rbp
    1508:	48 83 ec 08          	sub    $0x8,%rsp
    150c:	e8 ef fa ff ff       	callq  1000 <_init>
    1511:	48 c1 fd 03          	sar    $0x3,%rbp
    1515:	74 1f                	je     1536 <__libc_csu_init+0x56>
    1517:	31 db                	xor    %ebx,%ebx
    1519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1520:	4c 89 f2             	mov    %r14,%rdx
    1523:	4c 89 ee             	mov    %r13,%rsi
    1526:	44 89 e7             	mov    %r12d,%edi
    1529:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    152d:	48 83 c3 01          	add    $0x1,%rbx
    1531:	48 39 dd             	cmp    %rbx,%rbp
    1534:	75 ea                	jne    1520 <__libc_csu_init+0x40>
    1536:	48 83 c4 08          	add    $0x8,%rsp
    153a:	5b                   	pop    %rbx
    153b:	5d                   	pop    %rbp
    153c:	41 5c                	pop    %r12
    153e:	41 5d                	pop    %r13
    1540:	41 5e                	pop    %r14
    1542:	41 5f                	pop    %r15
    1544:	c3                   	retq   
    1545:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    154c:	00 00 00 00 

0000000000001550 <__libc_csu_fini>:
    1550:	f3 0f 1e fa          	endbr64 
    1554:	c3                   	retq   

Disassembly of section .fini:

0000000000001558 <_fini>:
    1558:	f3 0f 1e fa          	endbr64 
    155c:	48 83 ec 08          	sub    $0x8,%rsp
    1560:	48 83 c4 08          	add    $0x8,%rsp
    1564:	c3                   	retq   
